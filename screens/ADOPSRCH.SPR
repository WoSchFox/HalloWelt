*       *********************************************************
*       *                                                         
*       * 09/24/2003           ADOPSRCH.SPR              08:27:58 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * jassing@ix.netcom.com                                   
*       *                                                         
*       * Copyright (c) 2003 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************


*       *********************************************************
*       *                                                         
*       *         ADOPSRCH/Windows Setup Code - SECTION 1         
*       *                                                         
*       *********************************************************
*

#REGION 1

#DEFINE searchbutton 1
#DEFINE personbutton 2
#DEFINE savesrchbutton 3
#DEFINE deletebutton 4
#DEFINE clearbutton 5
#DEFINE exitbutton 6
#DEFINE helpbutton 7


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

IF NOT WEXIST("adopsrch") ;
	OR UPPER(WTITLE("ADOPSRCH")) == "ADOPSRCH.PJX" ;
	OR UPPER(WTITLE("ADOPSRCH")) == "ADOPSRCH.SCX" ;
	OR UPPER(WTITLE("ADOPSRCH")) == "ADOPSRCH.MNX" ;
	OR UPPER(WTITLE("ADOPSRCH")) == "ADOPSRCH.PRG" ;
	OR UPPER(WTITLE("ADOPSRCH")) == "ADOPSRCH.FRX" ;
	OR UPPER(WTITLE("ADOPSRCH")) == "ADOPSRCH.QPR"
	DEFINE WINDOW adopsrch ;
		AT  0.667, 7.125  ;
		SIZE 18.375,87.000 ;
		TITLE "Adoption Search" ;
		FONT "Arial", 10 ;
		STYLE "B" ;
		FLOAT ;
		NOCLOSE ;
		NOMINIMIZE ;
		SYSTEM ;
		COLOR RGB(,,,192,192,192)
	MOVE WINDOW adopsrch CENTER
ENDIF


*       *********************************************************
*       *                                                         
*       *         ADOPSRCH/Windows Setup Code - SECTION 2         
*       *                                                         
*       *********************************************************
*

#REGION 1

WAIT WINDOW "One moment..." NOWAIT

*** Open needed databases.
= opendbf("AnmlSrch", "SearchNo")
SCATTER MEMVAR BLANK
= opendbf("Animal", "AnimalNo")
SEEK cctxtnew
SCATTER MEMVAR MEMO

*** Load pull down arrays.
SELECT species FROM species.dbf INTO ARRAY specieslist WHERE species.domestic
IF USED("AgeGroup")
   SELECT agegroup
ELSE
   USE agegroup
ENDIF

COPY TO ARRAY agelist FIELDS generic, age, nm_cat, nm_dog, nm_Bird ALL

SELECT anmltbls
SCAN
   tmpalpha = ALLTRIM(TABLE)
   tmpbeta = ALLTRIM(DATABASE)
   tmpgamma = ALLTRIM(FIELD)
   SELECT &tmpgamma FROM &tmpbeta INTO ARRAY &tmpalpha
ENDSCAN

#DEFINE generic_idx 1
#DEFINE age_idx 2
#DEFINE cat_idx 3
#DEFINE dog_idx 4
#define bird_idx 5
m.agecolumn = generic_idx

*** Species-dependent stuff.
DIMENSION breedlist[1,1], breed2list[1,1], clrprmlist[1,1], clrscdlist[1,1],;
   clrpatlist[1,1], coatlist[1,1], taillist[1,1]
breedlist[1,1] = cctxtunspec
breed2list[1,1] = cctxtunspec
clrprmlist[1,1] = cctxtunspec
clrscdlist[1,1] = cctxtunspec
clrpatlist[1,1] = cctxtunspec
coatlist[1,1] = cctxtunspec
taillist[1,1] = cctxtunspec

*** Initialize search fields hold array.
DIMENSION animalhold[1]

lcsearchno = cctxtunspec
lcpersonno = cctxtunspec

WAIT CLEAR


*       *********************************************************
*       *                                                         
*       *             ADOPSRCH/Windows Screen Layout              
*       *                                                         
*       *********************************************************
*

#REGION 1
IF WVISIBLE("adopsrch")
	ACTIVATE WINDOW adopsrch SAME
ELSE
	ACTIVATE WINDOW adopsrch NOSHOW
ENDIF
@ 0.438,1.000 SAY "Processor" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 1.688,1.000 SAY "Date" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 1.688,18.333 SAY "Time" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 0.438,46.167 SAY "Search Code #" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 4.125,1.000 SAY "Species" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 5.750,1.000 SAY "Primary Breed" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 4.125,44.833 SAY "Primary Color" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 5.750,44.833 SAY "Secondary Color" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 7.375,44.833 SAY "Color Pattern" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 9.000,21.333 SAY "Altered" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 9.000,1.000 SAY "Sex" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 10.625,1.167 SAY "Age Group" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 9.063,44.833 SAY "Coat" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 10.750,45.000 SAY "Tail" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 7.375,1.000 SAY "Secondary Breed" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 12.250,1.167 SAY "Size Group" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 1.688,46.167 SAY "Person Code #" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 3.313,0.667 TO 3.313,84.667 ;
	PEN 2, 8 ;
	STYLE "1"
@ 13.750,1.167 SAY "Search Type" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 3.938,20.500 GET m.species ;
	PICTURE "@^" ;
	FROM speciesList ;
	SIZE 1.500,21.167 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B" ;
	VALID pSpecies("Valid")
@ 5.563,20.500 GET m.Breed1 ;
	PICTURE "@^" ;
	FROM breedList ;
	SIZE 1.500,21.167 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B" ;
	VALID _1200i59c9() ;
	DISABLE
@ 7.188,20.500 GET m.Breed2 ;
	PICTURE "@^" ;
	FROM breed2List ;
	SIZE 1.500,21.167 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B" ;
	DISABLE
@ 8.813,7.500 GET m.sex ;
	PICTURE "@^ Unspecified;Male;Female;Unknown" ;
	SIZE 1.500,11.500 ;
	DEFAULT "Unspecified" ;
	FONT "Arial", 10 ;
	STYLE "B"
@ 8.813,30.333 GET m.altered ;
	PICTURE "@^ Unspecified;Yes;No;Unknown" ;
	SIZE 1.500,11.333 ;
	DEFAULT "Unspecified" ;
	FONT "Arial", 10 ;
	STYLE "B"
@ 10.438,20.500 GET m.ageGroup ;
	PICTURE "@^" ;
	FROM ageList ;
	SIZE 1.500,21.167 ;
	RANGE ageColumn ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B"
@ 12.063,20.500 GET m.weightGrp ;
	PICTURE "@^" ;
	FROM wghtList ;
	SIZE 1.500,21.167 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B"
@ 13.688,20.500 GET lnSearchType ;
	PICTURE "@*RVN Local Shelter;Outside Shelters" ;
	SIZE 1.063,21.667,0.000 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 3.938,63.333 GET m.Color1 ;
	PICTURE "@^" ;
	FROM clrprmlist ;
	SIZE 1.500,21.167 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B" ;
	DISABLE
@ 5.563,63.333 GET m.Color2 ;
	PICTURE "@^" ;
	FROM clrscdlist ;
	SIZE 1.500,21.167 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B" ;
	VALID pColor2("Valid")	 ;
	DISABLE
@ 7.188,63.333 GET m.pattern ;
	PICTURE "@^" ;
	FROM clrpatlist ;
	SIZE 1.500,21.167 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B" ;
	VALID pPattern("Valid")	 ;
	DISABLE
@ 8.813,63.333 GET m.coat ;
	PICTURE "@^" ;
	FROM coatlist ;
	SIZE 1.500,21.167 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B" ;
	DISABLE
@ 10.438,63.333 GET m.tail ;
	PICTURE "@^" ;
	FROM tailList ;
	SIZE 1.500,21.167 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B" ;
	DISABLE
@ 12.500,63.333 GET m.Declawed ;
	PICTURE "@*C Declawed" ;
	SIZE 1.063,14.833 ;
	DEFAULT 0 ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 16.313,0.833 GET m.button ;
	PICTURE "@*HN \!\<Search...;\<Person...;\\Sa\<ve;\\\<Delete...;C\<lear;\?\<Exit;\<Help..." ;
	SIZE 1.438,11.500,0.833 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B" ;
	VALID pButton("Valid")	
@ 0.438,13.500 SAY gcUserId ;
	SIZE 1.000,20.000 ;
	FONT "Arial", 10
@ 1.688,7.500 SAY DATE() ;
	SIZE 1.000,8.833 ;
	FONT "Arial", 10
@ 1.688,24.833 SAY TIME() ;
	SIZE 1.000,8.167 ;
	FONT "Arial", 10
@ 1.750,64.500 SAY m.PersonNo ;
	SIZE 1.000,19.333 ;
	FONT "Arial", 10
@ 0.438,64.500 GET lcSearchNo ;
	SIZE 1.000,19.500 ;
	DEFAULT " " ;
	FONT "Arial", 10 ;
	PICTURE "@K" ;
	VALID pSearchNo("Valid")

IF NOT WVISIBLE("adopsrch")
	ACTIVATE WINDOW adopsrch
ENDIF

READ CYCLE MODAL ;
	SHOW _1200i59cl()

RELEASE WINDOW adopsrch

#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       *********************************************************
*       *                                                         
*       *              ADOPSRCH/Windows Cleanup Code              
*       *                                                         
*       *********************************************************
*

#REGION 1
*----------------------------------------------------------------------------------------------*
*             Screen Cleanup
*----------------------------------------------------------------------------------------------*
* Close Opened Databases.

= closedbf("anmlsrch")
= closedbf("animal")


*----------------------------------------------------------------------------------------------*
*             Screen Field Procedures
*----------------------------------------------------------------------------------------------*


*       *********************************************************
*       *                                                         
*       *  ADOPSRCH/Windows Supporting Procedures and Functions   
*       *                                                         
*       *********************************************************
*

#REGION 1
PROCEDURE pbutton
   PARAMETER pcaction

   DO CASE
   CASE m.button = searchbutton
      = arrayg(@animalfields, @animalhold)
      lcreturnval = ""
      llsearchlocal = IIF(lnsearchtype = 1, .T., .F.)
      DO search.spr WITH "animal", lcreturnval,.T. ,.F. ,.F., llsearchlocal
      = arrays(@animalfields, @animalhold)

   CASE m.button = personbutton
      IF admin.longform AND !glrmtadop
         gcnextevent = "person"
         gcparameters = "'No Animal', M.personno, 'Wants', .f."
      ELSE
         gcnextevent = "person2"
         gcparameters = "'No Animal', M.personno, 'Wants', .f."
      ENDIF

      DO WHILE NOT EMPTY(gcnextevent)
         lcnextevent = gcnextevent
         lcparameters = gcparameters
         gcnextevent = ""
         gcparameters = ""
         DO (lcnextevent + ".spr ") WITH &lcparameters
      ENDDO

      m.personno = gcpersonno
      IF goodcode(m.personno, "P")
         SHOW GET m.button, savesrchbutton ENABLE

         lcreturnval = ""
         DO savdsrch.spr WITH m.personno, "A", lcreturnval

         IF !EMPTY(lcreturnval)
            SELECT anmlsrch
            SET ORDER TO searchno
            IF SEEK(lcreturnval)
               SCATTER MEMVAR MEMO
               lcsearchno = m.searchno
               = animalparams(m.species)
               = enableanimal()
               SHOW GET m.button, deletebutton ENABLE
               SHOW GETS
            ENDIF
         ENDIF
      ELSE
         SHOW GET m.button, savesrchbutton DISABLE
         SHOW GET m.button, deletebutton DISABLE
      ENDIF
      SHOW GETS

   CASE m.button = savesrchbutton
      IF unspec(m.species)
         WAIT WINDOW "A Species Must Be Entered Before Saving Search..."
         RETURN .T.
      ENDIF

      SELECT anmlsrch
      IF unspec(lcsearchno)
         =newrec()
         lcsearchno = newnum("searchno")
         m.searchno = lcsearchno
      ENDIF
      m.srchtype = "A"
      GATHER MEMVAR MEMO
      = lastupdt()

      SHOW GET lcsearchno
      WAIT WINDOW "Record Has Been Saved..." TIMEOUT 5

   CASE m.button = deletebutton
      IF msgbox("Are You Sure You Want To Delete This Record?","Caution!",260)=6
         SELECT anmlsrch
         DELETE
         WAIT WINDOW "Record Has Been Deleted..." TIMEOUT 4
         DO clearscreen
      ENDIF

   CASE m.button = clearbutton
      DO clearscreen

   CASE m.button = exitbutton
      CLEAR READ

   CASE m.button = helpbutton
      HELP adoption search SCREEN
   ENDCASE

   *----------------------------------------------------------------------------------------------*
PROCEDURE psearchno
   PARAMETER pcaction

   IF ALLTRIM(lcsearchno) == cctxtunspec OR EMPTY(lcsearchno)
      lcsearchno = cctxtunspec
      SHOW GET lcseachno
      RETURN .T.
   ENDIF

   IF lcsearchno == m.searchno
      RETURN .T.
   ENDIF

   = proccode(@lcsearchno, "E")
   IF goodcode(lcsearchno, "E")
      SELECT anmlsrch
      SET ORDER TO searchno
      IF SEEK(lcsearchno)
         SCATTER MEMVAR MEMO
         = animalparams(m.species)
         = enableanimal()
         SHOW GET m.button, savesrchbutton ENABLE
         SHOW GET m.button, deletebutton ENABLE
         SHOW GETS
      ELSE
         WAIT WINDOW "Search Record Not Found..."
         lcsearchno = cctxtunspec
         SHOW GET lcsearchno
         SHOW GET m.button, savesrchbutton DISABLE
         SHOW GET m.button, deletebutton DISABLE
      ENDIF
   ELSE
      WAIT WINDOW "Invalid Format For Search Code..."
      lcsearchno = cctxtunspec
      SHOW GET lcsearchno
      SHOW GET m.button, savesrchbutton DISABLE
      SHOW GET m.button, deletebutton DISABLE
   ENDIF

   *----------------------------------------------------------------------------------------------*
PROCEDURE pcity
   PARAMETER pcaction

   m.city = pproper(m.city)
   SHOW GET m.city


   *----------------------------------------------------------------------------------------------*
PROCEDURE pspecies
   PARAMETER pcaction

   IF !unspec(m.species)
      = animalparams(m.species)
      = enableanimal()
   ELSE
      m.color1 = cctxtunspec
      m.color2 = cctxtunspec
      m.pattern = cctxtunspec
      m.coat = cctxtunspec
      m.tail = cctxtunspec
      m.breed1 = cctxtunspec
      m.breed2 = cctxtunspec
      = disableanimal()
      SHOW GETS
   ENDIF


   *----------------------------------------------------------------------------------------------*
PROCEDURE pcolor2
   PARAMETER pcaction

   IF ALLTRIM(m.color2) == "None"
      m.pattern = "Solid"
      SHOW GET m.pattern
   ENDIF

   *----------------------------------------------------------------------------------------------*
PROCEDURE ppattern
   PARAMETER pcaction

   IF ALLTRIM(m.pattern) == "Solid"
      m.color2 = "None"
      SHOW GET m.color2
   ENDIF


   *----------------------------------------------------------------------------------------------*
   *                       Screen Functions
   *----------------------------------------------------------------------------------------------*

   *----------------------------------------------------------------------------------------------*
   * Turn On Or Off Appropriate Widgets Based On The Current Mode.
PROCEDURE enableanimal

   IF unspec(m.species)
      RETURN .T.
   ENDIF

   SHOW GET m.breed1 ENABLE
   SHOW GET m.breed2 ENABLE
   SHOW GET m.color1 ENABLE
   SHOW GET m.color2 ENABLE
   SHOW GET m.pattern ENABLE
   SHOW GET m.weightgrp ENABLE
   SHOW GET m.altered ENABLE
   SHOW GET m.coat ENABLE
   SHOW GET m.tail ENABLE

   RETURN .T.

   *----------------------------------------------------------------------------------------------*
PROCEDURE disableanimal

   SHOW GET m.breed1 DISABLE
   SHOW GET m.breed2 DISABLE
   SHOW GET m.color1 DISABLE
   SHOW GET m.color2 DISABLE
   SHOW GET m.pattern DISABLE
   SHOW GET m.weightgrp DISABLE
   SHOW GET m.altered DISABLE
   SHOW GET m.coat DISABLE
   SHOW GET m.tail DISABLE

   RETURN .T.

   *----------------------------------------------------------------------------------------------*
   * Load Up Appropriate Tables Based On Species.
PROCEDURE animalparams
   PARAMETER critter_type

   IF unspec(critter_type)
      RETURN .T.
   ENDIF

   IF SUBSTR(critter_type, 1, 4) == "Wild"
      m.type = SUBSTR(critter_type, 6)
   ELSE
      m.type = critter_type
   ENDIF

   DO CASE
   CASE ALLTRIM(critter_type) == "Cat"
      agecolumn = cat_idx
   CASE ALLTRIM(critter_type) == "Dog"
      agecolumn = dog_idx
   CASE ALLTRIM(critter_type) == "Bird"
      agecolumn = bird_idx
   OTHERWISE
      agecolumn = generic_idx
   ENDCASE

   SHOW GET m.agegroup
   tmp = SELECT(0)

   SELECT breed, SIZE FROM breeds INTO ARRAY breedlist WHERE (breeds.species == critter_type OR breeds.species == "Any")

   SELECT breed FROM breeds INTO ARRAY breed2list WHERE (breeds.species == critter_type OR breeds.species == "Any" OR breeds.species == "Secondary")

   SELECT anmlvars
   SCAN
      tmpalpha = ALLTRIM(TABLE)
      tmpbeta = ALLTRIM(DATABASE)
      tmpgamma = ALLTRIM(FIELD)
      SELECT &tmpgamma FROM &tmpbeta INTO ARRAY &tmpalpha WHERE &tmpbeta..&type = .T.
      SELECT (tmpbeta)
      USE
   ENDSCAN

   SELECT (tmp)
   RETURN .T.

   *-------------------------------------------------------------------------------------------*
PROCEDURE clearscreen

   *** Open Needed Databases.
   SELECT anmlsrch
   SCATTER MEMVAR BLANK
   SELECT animal
   SEEK cctxtnew
   SCATTER MEMVAR MEMO

   *** Initialize Search Fields Hold Array.
   DIMENSION animalhold[1]

   SHOW GET m.button, savesrchbutton DISABLE
   SHOW GET m.button, deletebutton DISABLE

   m.agecolumn = generic_idx
   lcsearchno = cctxtunspec
   lcpersonno = cctxtunspec

   _CUROBJ = OBJNUM(m.species)
   DO pspecies


*       *********************************************************
*       *                                                         
*       * _1200I59C9           m.Breed1 VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ADOPSRCH,     Record Number:   22  
*       * Variable:            m.Breed1                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      1                                  
*       *                                                         
*       *********************************************************
*
* This will default the size field from the breed table.
FUNCTION _1200i59c9     &&  m.Breed1 VALID
#REGION 1
lnSub = ASUBSCRIPT(breedlist, ASCAN(breedlist, m.breed1), 1)
IF m.Species # "Wild" AND !EMPTY(breedList(lnSub, 2))
	m.WeightGrp = breedList(lnSub,2)
	SHOW GET m.WeightGrp
ENDIF

*       *********************************************************
*       *                                                         
*       * _1200I59CL           Read Level Show                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ADOPSRCH                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      2                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _1200i59cl     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* Show Code from screen: ADOPSRCH
*
#REGION 1
IF SYS(2016) = "ADOPSRCH" OR SYS(2016) = "*"
	ACTIVATE WINDOW adopsrch SAME
	@ 0.438,13.500 SAY gcUserId ;
		SIZE 1.000,20.000, 0.000 ;
		FONT "Arial", 10
	@ 1.688,7.500 SAY DATE() ;
		SIZE 1.000,8.833, 0.000 ;
		FONT "Arial", 10
	@ 1.688,24.833 SAY TIME() ;
		SIZE 1.000,8.167, 0.000 ;
		FONT "Arial", 10
	@ 1.750,64.500 SAY m.PersonNo ;
		SIZE 1.000,19.333, 0.000 ;
		FONT "Arial", 10
ENDIF
IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF