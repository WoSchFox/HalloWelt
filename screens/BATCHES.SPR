*       *********************************************************
*       *                                                         
*       * 09/24/2003            BATCHES.SPR              08:28:02 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * jassing@ix.netcom.com                                   
*       *                                                         
*       * Copyright (c) 2003 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

IF NOT WEXIST("wbatches") ;
	OR UPPER(WTITLE("WBATCHES")) == "WBATCHES.PJX" ;
	OR UPPER(WTITLE("WBATCHES")) == "WBATCHES.SCX" ;
	OR UPPER(WTITLE("WBATCHES")) == "WBATCHES.MNX" ;
	OR UPPER(WTITLE("WBATCHES")) == "WBATCHES.PRG" ;
	OR UPPER(WTITLE("WBATCHES")) == "WBATCHES.FRX" ;
	OR UPPER(WTITLE("WBATCHES")) == "WBATCHES.QPR"
	DEFINE WINDOW wbatches ;
		AT  0.000, 0.000  ;
		SIZE 12.688,74.500 ;
		TITLE "Batch Processing" ;
		FONT "Arial", 10 ;
		STYLE "B" ;
		FLOAT ;
		NOCLOSE ;
		NOMINIMIZE ;
		SYSTEM ;
		COLOR RGB(,,,192,192,192)
	MOVE WINDOW wbatches CENTER
ENDIF


*       *********************************************************
*       *                                                         
*       *         BATCHES/Windows Setup Code - SECTION 2          
*       *                                                         
*       *********************************************************
*

#REGION 1
*:All3d
*** Define some variables used when referencing the array.
batches_text = 1
batches_no = 2
batches_type = 3
batches_status = 4

DIMENSION laBatches[1,1]

*** Open databases.
= OPENDBF("Batches", "BatchNo")
= OPENDBF("BatchTbl")
= OPENDBF("Licenses")

DO LoadBatches



*       *********************************************************
*       *                                                         
*       *              BATCHES/Windows Screen Layout              
*       *                                                         
*       *********************************************************
*

#REGION 1
IF WVISIBLE("wbatches")
	ACTIVATE WINDOW wbatches SAME
ELSE
	ACTIVATE WINDOW wbatches NOSHOW
ENDIF
@ 0.688,2.167 GET BatchSel ;
 	PICTURE "@&N" ;
	FROM laBatches ;
	SIZE 9.000,69.833 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	COLOR RGB(,,,255,255,255),RGB(,,,255,255,255)
@ 10.438,10.333 GET m.lnAction ;
	PICTURE "@*HN Clo\<se;\<Print;C\<lear;\?\<Cancel;\<Help..." ;
	SIZE 1.615,9.667,1.333 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID val_batches() ;
	COLOR ,,,,,,,,RGB(,,,255,255,255)

IF NOT WVISIBLE("wbatches")
	ACTIVATE WINDOW wbatches
ENDIF

READ CYCLE MODAL

RELEASE WINDOW wbatches

#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       *********************************************************
*       *                                                         
*       *              BATCHES/Windows Cleanup Code               
*       *                                                         
*       *********************************************************
*

#REGION 1
= CLOSEDBF("Batches")
= CLOSEDBF("BatchTbl")
= CLOSEDBF("Licenses")

*--------------------------------------------------------------------------------*
* Loads the batch array.
*--------------------------------------------------------------------------------*


*       *********************************************************
*       *                                                         
*       *  BATCHES/Windows Supporting Procedures and Functions    
*       *                                                         
*       *********************************************************
*

#REGION 1
PROCEDURE LoadBatches

SELECT * ;
   FROM batches ;
   WHERE STATUS # "Processed" ;
   ORDER BY batchtype, batchno ;
   INTO CURSOR qbatches

IF _TALLY > 0
   DIMENSION labatches[_TALLY, 4]
   GO TOP
   FOR i = 1 TO _TALLY
      labatches[i, Batches_Text] = batchtype + "  " + batchno + "        " + STATUS
      labatches[i, Batches_No] = batchno
      labatches[i, Batches_Type] = batchtype
      labatches[i, Batches_Status] = STATUS
      SKIP 1
   ENDFOR
ENDIF
USE
SHOW GET BatchSel

*-----------------------------------------------------------------------------------------*
* Valid for action buttons.
*-----------------------------------------------------------------------------------------*
PROCEDURE Val_Batches

EXTERNAL ARRAY laBatches

DO CASE
CASE lnAction = 1			&& Close Batch
	IF INLIST(laBatches[BatchSel, Batches_Status], "Closed", "Printed")
		=ALERT("This batch has already been closed!")
		RETURN
	ENDIF
		
	IF msgbox("Are you ready to close this batch?","",260)=6)
		*** Close current batch. If not a batch processing batch mark as processed.
		SELECT Batches
		=SEEK(laBatches[BatchSel, Batches_No])
		REPLACE Status WITH "Closed"
		REPLACE CloseDt WITH DATE()
	ENDIF		
			
CASE lnAction = 2			&& Print Batch
	IF laBatches[BatchSel, Batches_Status] = "Open"
		=ALERT("This batch must be closed before it can be printed.")
		RETURN
	ENDIF

	*** Initialize report selection variables.
	llPrintSel = .F.
	llLicCert = .F.
	llHoldLtr = .F.	
	llAuditRpt = .T.
	llByAcct = .F.
	llTendSumm = .F.

	*** If this is a "NORMAL" Batch request do not print their Certificates
	SELECT BatchTbl
	LOCATE FOR BatchTbl.BatchType = (laBatches[BatchSel, Batches_Type])
	IF BatchTbl.BatchProc
		llLicCert = .T.
		llHoldLtr = .T.	
	ENDIF
	
	*** Print documents selected to print on the print selection screen.
	IF PrnSel5()
		IF llLicCert
			*** Select all Open licenses in this batch, and then print their certificates.
			SELECT Licenses
			WAIT WINDOW 'Selecting active licenses...' NOWAIT
			SELECT Licenses.LicenseNo ;
				FROM 	Licenses ;
				WHERE Licenses.BatchNo = laBatches[BatchSel, Batches_No] ;
				AND Licenses.Status = "Active" ;
				ORDER BY Licenses.LicenseNo ;
				INTO CURSOR qLicenses

			IF _TALLY = 0
				WAIT WINDOW "There are no License Certificates to print in this batch..." TIMEOUT 5
			ELSE
				IF llPrintSel
					= PrintRpt("Set Printer", "License Certificate")
				ENDIF		
				SCAN
					= LicnCert(LicenseNo)
					SELECT qLicenses
				ENDSCAN
			ENDIF
			USE
		ENDIF
		
		IF llHoldLtr	
			*** Select all held licenses in this batch and then print hold letters.
			WAIT WINDOW 'Selecting held licenses...' NOWAIT
			SELECT Licenses.AnimalNo ;
				FROM 	Licenses ;
				WHERE Licenses.BatchNo = laBatches[BatchSel, Batches_No] ;
				AND Licenses.Status = "Held" ;
				INTO CURSOR qLicenses

			SELECT qLicenses	
			IF _TALLY = 0
				WAIT WINDOW "There are no License Hold Letters to print in this batch..." TIMEOUT 5
			ELSE	
				IF llPrintSel
					= PrintRpt("Set Printer", "Hold Letters")
				ENDIF		
				SCAN
					= LICNLETR(AnimalNo)
					SELECT qLicenses
				ENDSCAN
			ENDIF	
			USE
		ENDIF
		
		IF llAuditRpt
			*** Print transaction audit report.
			DO DailyTrn.PRG WITH laBatches[BatchSel, Batches_No], {}, {}, llByAcct, .F., llPrintSel
		ENDIF

		IF llTendSumm
			*** Print tender summary report.
			DO TendSum.PRG WITH {}, {}, laBatches[BatchSel, Batches_No], llPrintSel
		ENDIF

		SELECT Batches
		=SEEK(laBatches[BatchSel, Batches_No])
		REPLACE Status WITH "Printed"
	ENDIF
CASE lnAction = 3			&& Clear Batch			
	IF laBatches[BatchSel, Batches_Status] = "Open"
		=ALERT("This batch must be closed before it can be cleared.")
		RETURN
	ENDIF
	IF msgbox("Are you sure that you are ready to CLEAR this batch?","Caution!",260)=6
		SELECT Batches
		=SEEK(laBatches[BatchSel, Batches_No])
		REPLACE Status WITH "Processed"
	ENDIF
CASE lnAction = 4			&& Cancel
	CLEAR READ
CASE lnAction = 5
	HELP Batch Processing Screen
ENDCASE

*** Reload the batch array.
DO LoadBatches
RETURN
