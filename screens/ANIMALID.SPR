*       *********************************************************
*       *                                                         
*       * 09/24/2003           ANIMALID.SPR              08:28:00 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * jassing@ix.netcom.com                                   
*       *                                                         
*       * Copyright (c) 2003 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************

PARAMETERS animalno, which

*       *********************************************************
*       *                                                         
*       *         ANIMALID/Windows Setup Code - SECTION 1         
*       *                                                         
*       *********************************************************
*

#REGION 1

goodwhich = PARAMETERS() > 1

*if type("IDARRY")#"U" and isarray(@idarray)
*  EXTERNAL ARRAY IDarray
*else
*  #insert programs\anmlstup.prg
*endif


#DEFINE id_text 1
#DEFINE id_idx 2
#DEFINE id_type 3
#DEFINE id_issuer 4
#DEFINE id_code 5
#DEFINE id_expire 6
#DEFINE idwidth 6


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

IF NOT WEXIST("animalid") ;
	OR UPPER(WTITLE("ANIMALID")) == "ANIMALID.PJX" ;
	OR UPPER(WTITLE("ANIMALID")) == "ANIMALID.SCX" ;
	OR UPPER(WTITLE("ANIMALID")) == "ANIMALID.MNX" ;
	OR UPPER(WTITLE("ANIMALID")) == "ANIMALID.PRG" ;
	OR UPPER(WTITLE("ANIMALID")) == "ANIMALID.FRX" ;
	OR UPPER(WTITLE("ANIMALID")) == "ANIMALID.QPR"
	DEFINE WINDOW animalid ;
		AT  0.000, 0.000  ;
		SIZE 18.438,96.333 ;
		TITLE "Animal Identification" ;
		FONT "Arial", 10 ;
		STYLE "B" ;
		FLOAT ;
		NOCLOSE ;
		NOMINIMIZE ;
		DOUBLE ;
		COLOR RGB(,,,192,192,192)
	MOVE WINDOW animalid CENTER
ENDIF


*       *********************************************************
*       *                                                         
*       *         ANIMALID/Windows Setup Code - SECTION 2         
*       *                                                         
*       *********************************************************
*

#REGION 1
*** Open needed databases.
= opendbf("Licenses")

IF goodwhich
  currentselection = which
ELSE
  currentselection = 1
ENDIF
readonly = goodcode(m.animalno, "A") AND (LEFT(m.animalno, 4) != admin.shltcode)
memoryonly = !goodcode(m.animalno, "A")

PRIVATE lclicense, lcissuer, lccode, ldexpire
lclicense = cctxtunspec
lcissuer = cctxtunspec
lccode = ""
ldexpire = { }

DIME licdel[alen(idarray,1)]



*       *********************************************************
*       *                                                         
*       *             ANIMALID/Windows Screen Layout              
*       *                                                         
*       *********************************************************
*

#REGION 1
IF WVISIBLE("animalid")
	ACTIVATE WINDOW animalid SAME
ELSE
	ACTIVATE WINDOW animalid NOSHOW
ENDIF
@ 10.000,1.833 SAY "ID Type" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 10.000,50.333 SAY "ID Code" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 10.000,78.333 SAY "Expiration Date" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 10.000,27.333 SAY "Issuer" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 13.688,2.000 SAY "Animal Notes" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 0.563,34.500 SAY "Known ID's of This Animal" ;
	FONT "Arial", 10 ;
	STYLE "BT"
@ 11.063,2.000 GET lcLicense ;
	PICTURE "@^" ;
	FROM taglist ;
	SIZE 1.500,24.167 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B" ;
	VALID checkEnabled()
@ 11.125,28.000 GET lcIssuer ;
	PICTURE "@^" ;
	FROM issuerList ;
	SIZE 1.500,20.833 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B" ;
	DISABLE
@ 11.313,50.833 GET lcCode ;
	SIZE 1.000,25.333 ;
	DEFAULT " " ;
	FONT "Arial", 10 ;
	PICTURE "@K!" ;
	VALID pCode("Valid") ;
	DISABLE
@ 11.313,78.833 GET ldExpire ;
	SIZE 1.000,14.833 ;
	DEFAULT {  /  /  } ;
	FONT "Arial", 10 ;
	PICTURE "@K" ;
	DISABLE
@ 13.688,18.000 EDIT m.notes ;
	SIZE 4.000,39.167,0.000 ;
	DEFAULT " " ;
	FONT "Arial", 10 ;
	SCROLL
@ 16.125,60.167 GET m.exit ;
	PICTURE "@*HN \<Save;\?E\<xit;\<Help..." ;
	SIZE 1.625,10.667,1.000 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	STYLE "B" ;
	VALID _1200i5aws()
@ 13.500,66.833 GET dellic ;
	PICTURE "@*HN Delete License/ID" ;
	SIZE 1.769,19.500,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	WHEN idpick>0 ;
	VALID _1200i5axf() ;
	DISABLE
@ 0.688,2.167 GET m.IDpick ;
 	PICTURE "@&N" ;
	FROM IDarray ;
	SIZE 9.000,91.833 ;
	DEFAULT 1 ;
	FONT "Arial", 10 ;
	WHEN _1200i5axk() ;
	VALID _1200i5axp() ;
	MESSAGE idPickProc(.F.)

IF NOT WVISIBLE("animalid")
	ACTIVATE WINDOW animalid
ENDIF

READ CYCLE MODAL ;
	WHEN _1200i5aya() ;
	ACTIVATE _1200i5ayb() ;
	SHOW _1200i5ayc()

RELEASE WINDOW animalid

#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       *********************************************************
*       *                                                         
*       *              ANIMALID/Windows Cleanup Code              
*       *                                                         
*       *********************************************************
*

#REGION 1
POP KEY ALL

RELE licdel
= closedbf("Licenses")

*---------------------------------------------------------------------------------------------*
*             SCREEN FIELD PROCEDURES
*---------------------------------------------------------------------------------------------*


*       *********************************************************
*       *                                                         
*       *  ANIMALID/Windows Supporting Procedures and Functions   
*       *                                                         
*       *********************************************************
*

#REGION 1
PROCEDURE pcode
   PARAMETER pcaction

   lccode = padtrim(lccode)
   SHOW GET lccode


   *---------------------------------------------------------------------------------------------*
   *                       SCREEN FUNCTIONS
   *---------------------------------------------------------------------------------------------*

   * Format for ID:
   * "License (Los Altos): 9500001, expires 2/4/96"
   * "Microchip (manufacturer): 00-00-00-00"
   * "Owner ID: Lucky"

   *------------------------------------------------------------------------------------------*
   * Selecting a record while there are unsaved changes should in all
   * cases pop up a dialog to complain.  Note that if you select the
   * record you're already editing, it will ask if you want to save
   * changes, and proceed to revert to the old one if you don't.


FUNCTION idpickproc
   PARAMETER isvalid
   startvalue = m.idpick
   IF isvalid
      *** Check for saving current ID

      IF m.currentselection = 1
         IF lclicense != cctxtunspec
            *** Warn to save; we want the behavior when selecting
            *** new to be different than selecting the same old record...
            TEXT = "This ID has not yet been saved."
            lcstatus = "Cancel"
            DO lose.spr WITH TEXT, lcstatus
            DO CASE
            CASE lcstatus = "Save"
               = savenew()
               SHOW GET m.idpick
            CASE lcstatus = "Lose"
            CASE lcstatus = "Cancel"
               m.idpick = m.currentselection
               SHOW GET m.idpick
               RETURN .T.
            ENDCASE
         ENDIF
      ELSE
         IF lclicense != idarray[m.currentSelection, ID_TYPE] OR ;
               lcissuer != idarray[m.currentSelection, ID_ISSUER] OR ;
               lccode != idarray[m.currentSelection, ID_CODE] OR ;
               ldexpire != idarray[m.currentSelection, ID_EXPIRE]
            TEXT = "Changes to this ID have not yet been saved."
            lcstatus = "Cancel"
            DO lose.spr WITH TEXT, lcstatus
            DO CASE
            CASE lcstatus = "Save"
               = saveold()
               SHOW GET m.idpick
            CASE lcstatus = "Lose"
            CASE lcstatus = "Cancel"
               m.idpick = m.currentselection
               SHOW GET m.idpick
               RETURN .T.
            ENDCASE
         ELSE
            IF m.idpick == m.currentselection
               RETURN .T.	&& Don't scatter repeatedly
            ENDIF
         ENDIF
      ENDIF
      *** Load other ID

      IF EMPTY(idarray[startValue, ID_IDX])
         m.currentselection = 1
         lclicense = cctxtunspec
         lcissuer = cctxtunspec
         lccode = ""
         ldexpire = { }
         m.idpick = 1
         = checkenabled()
         SHOW GET m.idpick
      ELSE
         m.currentselection = startvalue
         lclicense = idarray[startValue, ID_TYPE]
         lcissuer = idarray[startValue, ID_ISSUER]
         lccode = idarray[startValue, ID_CODE]
         ldexpire = idarray[startValue, ID_EXPIRE]
         m.idpick = startvalue
         = checkenabled()
         SHOW GET m.idpick
      ENDIF
      RETURN .T.

   ELSE	&& They just single-clicked it
      RETURN ""
   ENDIF
   RETURN -1

   *------------------------------------------------------------------------------------------*
   * Make sure appropriate items are enabled/disabled.
FUNCTION checkenabled
   SHOW GET lclicense
   DO CASE
   CASE unspec(lclicense) OR ALLTRIM(lclicense) == "None"
      lcissuer = cctxtunspec
      lccode = ""
      ldexpire = { }
      SHOW GET lcissuer DISABLE
      SHOW GET lccode DISABLE
      SHOW GET ldexpire DISABLE
   CASE ALLTRIM(lclicense) == "License"
      SHOW GET lcissuer ENABLE
      SHOW GET lccode ENABLE
      SHOW GET ldexpire ENABLE
   OTHERWISE
      SHOW GET lccode ENABLE
      SHOW GET lcissuer ENABLE
      SHOW GET ldexpire ENABLE
   ENDCASE
   RETURN .T.

   *-------------------------------------------------------------------------------------------*
   * Save current selection, figuring out whether it's new or old...
FUNCTION updatecurrent


   IF m.currentselection = 1
      IF lclicense != cctxtunspec
         = savenew()
         SHOW GET m.idpick
      ENDIF

   ELSE
      IF lclicense != idarray[m.currentSelection, ID_TYPE] OR ;
            lcissuer != idarray[m.currentSelection, ID_ISSUER] OR ;
            lccode != idarray[m.currentSelection, ID_CODE] OR ;
            ldexpire != idarray[m.currentSelection, ID_EXPIRE]

         && Time to update
         = saveold()
         SHOW GET m.idpick
      ENDIF

   ENDIF

   RETURN .T.

   *------------------------------------------------------------------------------------------*
   * Save current info as new record.
FUNCTION savenew

   IF readonly
      WAIT WINDOW "Can't write to remote database!"
      RETURN .T.
   ENDIF

   IF !m.memoryonly

      SELECT licenses
      =newrec()
      idx = newnum("LicenseId")

      REPLACE licenses.license WITH lclicense, ;
         licenses.issuer WITH lcissuer, ;
         licenses.licenseno WITH lccode, ;
         licenses.expiration WITH ldexpire, ;
         licenses.licenseid WITH idx, ;
         licenses.animalno WITH m.animalno

      = lastupdt()

      IF lclicense = "Registration"
         *** Get fee and the create a fee record.
         lnfee = 0
         lcaccount = ""
         lcfeetblref = ""

         = getfee("RegsFees", "Registration", m.animalno, @lnfee, @lcaccount,"","", ;
            @lcfeetblref)
         = newfee("", m.animalno, "", "Registration", "", "", lnfee, 1, "", lcaccount,"", ;
            lcfeetblref)
      ENDIF

   ELSE
      idx = "New"
   ENDIF

   DIMENSION idarray[ALEN(IDarray,1) + 1, IDWIDTH]

END = ALEN(idarray,1)
idarray[end,ID_TEXT] = idstring(lclicense, lcissuer, lccode, ldexpire)
idarray[end,ID_IDX] = idx
idarray[end,ID_TYPE] = lclicense
idarray[end,ID_ISSUER] = lcissuer
idarray[end,ID_CODE] = lccode
idarray[end,ID_EXPIRE] = ldexpire

m.currentselection = END
m.idpick = END

RETURN .T.

*--------------------------------------------------------------------------------------------*
* Save currentSelection.
FUNCTION saveold

   IF readonly
      WAIT WINDOW "Can't write to remote database!"
      RETURN .T.
   ENDIF

   IF !m.memoryonly

      SELECT licenses
      SET ORDER TO licenseid

      IF SEEK( idarray[m.currentSelection, ID_IDX] )
         REPLACE licenses.license WITH lclicense, ;
            licenses.issuer WITH lcissuer, ;
            licenses.licenseno WITH lccode, ;
            licenses.expiration WITH ldexpire

         = lastupdt()
      ENDIF

      idarray[currentSelection,ID_TEXT] = idstring(lclicense, lcissuer, lccode, ldexpire)
      idarray[currentSelection,ID_TYPE] = lclicense
      idarray[currentSelection,ID_ISSUER] = lcissuer
      idarray[currentSelection,ID_CODE] = lccode
      idarray[currentSelection,ID_EXPIRE] = ldexpire

   ELSE
      =msgbox("Failed to find locate ID","WARNING",48)
   ENDIF

   RETURN .T.

   *---------------------------------------------------------------------------------------------* * Also see the code in petwhere.prg that builds up the initial table.
FUNCTION idstring
   PARAMETERS tagtype, issuertxt, codetxt, expiredate

   RETURN ALLTRIM(tagtype) + IIF(!unspec(issuertxt), ;
      " (" + ALLTRIM(issuertxt) + ")", "") + ": " + ALLTRIM(codetxt) ;
      + IIF(!EMPTY(expiredate), ", expiration " + DTOC(expiredate), "")


PROC dellic
   PRIV x, newlen, WIDTH, holdlen
   WIDTH=ALEN(idarray,2)
   newlen=ALEN(idarray,1)
   holdlen=newlen

   FOR x = 1 TO holdlen
      DO CASE
      CASE TYPE("IDARRAY[x,1]")="L"
         EXIT
      CASE licdel[x]
         SELE licenses
         SET ORDER TO licenseid
         IF SEEK( idarray[x,id_idx] )
            DELETE
         ELSE
            WAIT WINDOW "WARNING: Failed to find an ID: "+idarray[x,id_idx] TIMEOUT 2
         ENDIF
         *         =ADEL( idarray, x )
         *         newlen=newlen-1
      OTHERWISE
         * Nothing
      ENDCASE
   ENDFOR

   FOR x = 1 TO holdlen
      IF licdel[x]
         =ADEL(idarray,x)
         newlen=newlen-1
      ENDIF
   ENDFOR

   DIME idarray[ newlen, WIDTH ]



*       *********************************************************
*       *                                                         
*       * _1200I5AWS           m.exit VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ANIMALID,     Record Number:   13  
*       * Variable:            m.exit                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      1                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _1200i5aws     &&  m.exit VALID
#REGION 1
DO CASE
	* Save
	CASE m.exit = 1		
    	= updatecurrent()
  	
  	* Exit
	CASE m.exit = 2	
  		IF unspec(lclicense) AND unspec(lcissuer) AND EMPTY(lccode) AND EMPTY(ldexpire)
    		CLEAR READ
    		RETURN .T.
  		ENDIF

  		IF m.currentselection = 1
    		*** Warn to save. We want the behavior when selecting
    		*** new to be different than selecting the same old record...
    		
    		TEXT = "This ID has not yet been saved."
    		lcstatus = "Cancel"

    		DO lose.spr WITH TEXT, lcstatus

    		DO CASE
    			CASE lcstatus = "Save"
      				= savenew()
      				CLEAR READ
      			
    			CASE lcstatus = "Lose"
      				CLEAR READ

   				CASE lcstatus = "Cancel"
      				RETURN .T.
    		ENDCASE
    		
  		ELSE
    		IF lclicense != idarray[m.currentSelection, ID_TYPE] OR ;
        	  lcissuer != idarray[m.currentSelection, ID_ISSUER] OR ;
        	  lccode != idarray[m.currentSelection, ID_CODE] OR ;
        	  ldexpire != idarray[m.currentSelection, ID_EXPIRE]
      		
      			TEXT = "Changes to this ID have not yet been saved."
      			lcstatus = "Cancel"

      			DO lose.spr WITH TEXT, lcstatus

      			DO CASE
      				CASE lcstatus = "Save"
        				= saveold()
        				CLEAR READ

      				CASE lcstatus = "Lose"
        				CLEAR READ

      				CASE lcstatus = "Cancel"
        				RETURN .T.
      			ENDCASE

    		ELSE
      			CLEAR READ
    		ENDIF
  		
  		ENDIF

	* Help
	CASE m.exit = 3
		HELP animal identification SCREEN
		
ENDCASE


*       *********************************************************
*       *                                                         
*       * _1200I5AXF           dellic VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ANIMALID,     Record Number:   14  
*       * Variable:            dellic                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      2                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _1200i5axf     &&  dellic VALID
#REGION 1
IF msgbox("Really delete this license?","Just checking",260)=6
  idarray[idpick,1] = '\'+idarray[idpick,1]
  licdel[idpick]=.T.
  SHOW GETS
  *  On "save" need to "delete" records from table. & redim array
  IF !readonly
    SHOW GET EXIT,1 ENABLE
  ENDIF
ENDIF


*       *********************************************************
*       *                                                         
*       * _1200I5AXK           m.IDpick WHEN                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ANIMALID,     Record Number:   15  
*       * Variable:            m.IDpick                           
*       * Called By:           WHEN Clause                        
*       * Object Type:         List                               
*       * Snippet Number:      3                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _1200i5axk     &&  m.IDpick WHEN
#REGION 1
show gets


*       *********************************************************
*       *                                                         
*       * _1200I5AXP           m.IDpick VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ANIMALID,     Record Number:   15  
*       * Variable:            m.IDpick                           
*       * Called By:           VALID Clause                       
*       * Object Type:         List                               
*       * Snippet Number:      4                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _1200i5axp     &&  m.IDpick VALID
#REGION 1
PRIV rval
rval = idpickproc(.T.)
IF rval and  idpick = 1
    SHOW GET lclicense ENABLE
    SHOW GET lcissuer ENABLE
    SHOW GET lccode ENABLE
    SHOW GET ldexpire ENABLE
    SHOW GET dellic DISABLE
    SHOW GET EXIT, 1 ENABLE
    show get delid enable
ENDIF
RETURN rval


*       *********************************************************
*       *                                                         
*       * _1200I5AYA           Read Level When                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ANIMALID                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      5                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _1200i5aya     && Read Level When
*
* When Code from screen: ANIMALID
*
#REGION 1
IF readonly
  =msgbox("Can't Save any changes...","Read Only Mode",48)
  SHOW GET m.exit, 1 DISABLE
ENDIF

IF m.currentselection > 1
  m.idpick = m.currentselection
  lclicense = idarray[m.IDpick, ID_TYPE]
  lcissuer = idarray[m.IDpick, ID_ISSUER]
  lccode = idarray[m.IDpick, ID_CODE]
  ldexpire = idarray[m.IDpick, ID_EXPIRE]
  = checkenabled()
  SHOW GET m.idpick
ENDIF


*       *********************************************************
*       *                                                         
*       * _1200I5AYB           Read Level Activate                
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ANIMALID                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      6                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _1200i5ayb     && Read Level Activate
*
* Activate Code from screen: ANIMALID
*
#REGION 1
push key clear

*       *********************************************************
*       *                                                         
*       * _1200I5AYC           Read Level Show                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ANIMALID                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      7                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _1200i5ayc     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* Show Code from screen: ANIMALID
*
#REGION 1
IF idpick > 0
  IF LEFT( idarray[ idpick, 1],1)='\'
    * Deleted
    SHOW GET lclicense DISABLE
    SHOW GET lcissuer DISABLE
    SHOW GET lccode DISABLE
    SHOW GET ldexpire DISABLE
    SHOW GET dellic DISABLE
  ELSE
    SHOW GET dellic ENABLE
  ENDIF
ELSE
  SHOW GET dellic DISABLE
ENDIF

IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF